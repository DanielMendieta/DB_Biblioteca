1- Función para obtener el total de ventas de clientes específicos:

DELIMITER $$
CREATE FUNCTION TotalComprasCliente (ClienteID INT)
RETURNS DECIMAL(10, 2)
BEGIN
    DECLARE total DECIMAL(10, 2);
    SELECT SUM(V.Total) INTO total
    FROM Ventas V
    WHERE V.ClienteID = ClienteID;
    RETURN total;
END $$

DELIMITER ;

SELECT TotalComprasCliente(1) AS Total_Compras;  -- Llamar a la funcion 

-----------------------------------------------------------------------------------

2- Función para obtener el total de libros comprados por clientes específicos:

DELIMITER $$

CREATE FUNCTION TotalLibrosCompradosCliente (ClienteID INT)
RETURNS INT
BEGIN
    DECLARE total INT;
    SELECT SUM(DV.Cantidad) INTO total
    FROM Ventas V
    JOIN DetallesVentas DV ON V.ID = DV.VentaID
    WHERE V.ClienteID = ClienteID;
    RETURN total;

END $$

DELIMITER ;


SELECT TotalLibrosCompradosCliente(2) AS Total_Libros_Comprados; -- Llamar a la funcion 

-----------------------------------------------------------------------------------

3- Funcíon que calcula el total de ventas de un cliente en un rango de fechas específico. 
Esto incluye el uso de parámetros adicionales para las fechas de inicio y fin.

DELIMITER $$

CREATE FUNCTION TotalVentasClientePorFecha (
    ClienteID INT,
    FechaInicio DATE,
    FechaFin DATE
)
RETURNS DECIMAL(10, 2)
BEGIN
    DECLARE total DECIMAL(10, 2);
    SELECT SUM(V.Total) INTO total
    FROM Ventas V
    WHERE V.ClienteID = ClienteID
      AND V.FechaVenta BETWEEN FechaInicio AND FechaFin;
    RETURN total;
END $$

DELIMITER ;

SELECT TotalVentasClientePorFecha(1, '2024-01-01', '2024-06-30') AS Total_Ventas; -- Llamar a la funcion 

-----------------------------------------------------------------------------------
4- Función que calcula el promedio de la calificación de los libros comprados por un cliente en un rango de fechas específico. 
Esto demuestra el uso de funciones agregadas y parámetros múltiples.

DELIMITER $$
CREATE FUNCTION PromedioCalificacionClientePorFecha (
    ClienteID INT,
    FechaInicio DATE,
    FechaFin DATE
)
RETURNS DECIMAL(3, 2)
BEGIN
    DECLARE promedio DECIMAL(3, 2);
    SELECT AVG(L.Calificacion) INTO promedio
    FROM Ventas V
    JOIN DetallesVentas DV ON V.ID = DV.VentaID
    JOIN Libros L ON DV.LibroID = L.ID
    WHERE V.ClienteID = ClienteID
      AND V.FechaVenta BETWEEN FechaInicio AND FechaFin;
    RETURN promedio;
END $$

DELIMITER ;

SELECT PromedioCalificacionClientePorFecha(1, '2024-01-01', '2024-06-30') AS Promedio_Calificacion;

-----------------------------------------------------------------------------------

5-Función que calcula el total de ingresos generados por un autor específico en un rango de fechas. 
Esta función toma en cuenta todas las ventas de libros de ese autor en el periodo indicado.

DELIMITER ||
CREATE FUNCTION TotalIngresosAutorPorFecha (
    AutorID INT,
    FechaInicio DATE,
    FechaFin DATE
)
RETURNS DECIMAL(10, 2)
BEGIN
    DECLARE total DECIMAL(10, 2);
    SELECT SUM(DV.PrecioUnitario * DV.Cantidad) INTO total
    FROM Ventas V
    JOIN DetallesVentas DV ON V.ID = DV.VentaID
    JOIN Libros L ON DV.LibroID = L.ID
    WHERE L.AutorID = AutorID
      AND V.FechaVenta BETWEEN FechaInicio AND FechaFin;
    RETURN total;

END ||

DELIMITER ;

SELECT TotalIngresosAutorPorFecha(2, '2024-01-01', '2024-06-30') AS Total_Ingresos;

-----------------------------------------------------------------------------------
6-Función que calcula el total de libros vendidos de un género específico en un rango de fechas. 

DELIMITER ||
CREATE FUNCTION TotalLibrosVendidosPorGenero (
    GeneroID INT,
    FechaInicio DATE,
    FechaFin DATE
)
RETURNS INT
BEGIN
    DECLARE total INT;
    SELECT SUM(DV.Cantidad) INTO total
    FROM Ventas V
    JOIN DetallesVentas DV ON V.ID = DV.VentaID
    JOIN Libros L ON DV.LibroID = L.ID
    WHERE L.GeneroID = GeneroID
      AND V.FechaVenta BETWEEN FechaInicio AND FechaFin;
    RETURN total;

END ||

DELIMITER ;

SELECT TotalLibrosVendidosPorGenero(1, '2024-01-01', '2024-06-30') AS Total_Libros_Vendidos;

-----------------------------------------------------------------------------------
7-Función que calcula el total de empleados por rol en la empresa.

DELIMITER //

CREATE FUNCTION TotalEmpleadosPorRol (
    RolID INT
)
RETURNS INT
BEGIN
    DECLARE total INT;
    SELECT COUNT(*) INTO total
    FROM empleadosRoles ER
    WHERE ER.RolID = RolID;
    RETURN total;
END //

DELIMITER ;

-----------------------------------------------------------------------------------
8-

